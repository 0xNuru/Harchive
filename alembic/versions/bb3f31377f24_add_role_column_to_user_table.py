"""Add role column to user table

Revision ID: bb3f31377f24
Revises: 
Create Date: 2023-02-22 02:32:53.501198

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bb3f31377f24'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('insurance')
    op.drop_table('patient')
    op.drop_table('immunization')
    op.drop_table('hospital')
    op.drop_table('hospitalWorkers')
    op.drop_table('doctor')
    op.drop_table('allergy')
    op.drop_table('transactions')
    op.drop_table('hospitals')
    op.drop_table('doctors')
    op.drop_table('admin')
    op.drop_table('drugs')
    op.drop_table('patients')
    op.drop_table('user')
    op.drop_table('medications')
    op.drop_table('record')
    op.drop_table('test')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hospital_record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_record_id'], ['record.id'], name='test_hospital_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='test_pkey'),
    sa.UniqueConstraint('test_name', name='test_test_name_key')
    )
    op.create_table('record',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('record_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('DOB', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('Gender', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('BloodType', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('Height', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('BMI', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='record_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('medications',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medication_name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('hospital_record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name='medications_doctor_id_fkey'),
    sa.ForeignKeyConstraint(['hospital_record_id'], ['record.id'], name='medications_hospital_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medications_pkey'),
    sa.UniqueConstraint('medication_name', name='medications_medication_name_key')
    )
    op.create_table('user',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('phone', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('userID', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('Address', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('Address', name='user_Address_key'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('name', name='user_name_key'),
    sa.UniqueConstraint('password', name='user_password_key'),
    sa.UniqueConstraint('phone', name='user_phone_key'),
    sa.UniqueConstraint('userID', name='user_userID_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('patients',
    sa.Column('id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('dob', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('gender', postgresql.ENUM('M', 'F', name='genderenum'), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('insuranceID', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='patients_pkey')
    )
    op.create_table('drugs',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medication_name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('hospital_record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_record_id'], ['record.id'], name='drugs_hospital_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='drugs_pkey'),
    sa.UniqueConstraint('medication_name', name='drugs_medication_name_key')
    )
    op.create_table('admin',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hospitalID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hospitalID'], ['hospitalWorkers.id'], name='admin_hospitalID_fkey'),
    sa.ForeignKeyConstraint(['id'], ['user.id'], name='admin_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='admin_pkey')
    )
    op.create_table('doctors',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('speciality', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hospitalID', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hospitalID'], ['hospital.id'], name='doctors_hospitalID_fkey'),
    sa.ForeignKeyConstraint(['id'], ['user.id'], name='doctors_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='doctors_pkey')
    )
    op.create_table('hospitals',
    sa.Column('id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('hospitalID', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='hospitals_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('transactions',
    sa.Column('id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('hospital_record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('drug_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('transaction_amount', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('vendor_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('transaction_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hospital_record_id'], ['record.id'], name='transactions_hospital_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey'),
    sa.UniqueConstraint('drug_name', name='transactions_drug_name_key'),
    sa.UniqueConstraint('quantity', name='transactions_quantity_key'),
    sa.UniqueConstraint('transaction_amount', name='transactions_transaction_amount_key'),
    sa.UniqueConstraint('transaction_type', name='transactions_transaction_type_key'),
    sa.UniqueConstraint('vendor_name', name='transactions_vendor_name_key')
    )
    op.create_table('allergy',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('allergies', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hospital_record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_record_id'], ['record.id'], name='allergy_hospital_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='allergy_pkey'),
    sa.UniqueConstraint('allergies', name='allergy_allergies_key')
    )
    op.create_table('doctor',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('speciality', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hospitalID', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hospitalID'], ['hospitals.id'], name='doctor_hospitalID_fkey'),
    sa.ForeignKeyConstraint(['id'], ['user.id'], name='doctor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='doctor_pkey')
    )
    op.create_table('hospitalWorkers',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hospitalID', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hospitalID'], ['hospitals.id'], name='hospitalWorkers_hospitalID_fkey'),
    sa.ForeignKeyConstraint(['id'], ['user.id'], name='hospitalWorkers_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='hospitalWorkers_pkey')
    )
    op.create_table('hospital',
    sa.Column('id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('hospitalID', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='hospital_pkey')
    )
    op.create_table('immunization',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('immunziation_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('immunization_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('immunization_location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hospital_record_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hospital_record_id'], ['record.id'], name='immunization_hospital_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='immunization_pkey'),
    sa.UniqueConstraint('immunization_date', name='immunization_immunization_date_key'),
    sa.UniqueConstraint('immunization_location', name='immunization_immunization_location_key'),
    sa.UniqueConstraint('immunziation_name', name='immunization_immunziation_name_key')
    )
    op.create_table('patient',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dob', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('gender', postgresql.ENUM('M', 'F', name='genderenum'), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('insuranceID', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], name='patient_id_fkey')
    )
    op.create_table('insurance',
    sa.Column('id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('insuranceID', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='insurance_pkey'),
    sa.UniqueConstraint('insuranceID', name='insurance_insuranceID_key'),
    sa.UniqueConstraint('phone', name='insurance_phone_key')
    )
    # ### end Alembic commands ###
